{"version":3,"sources":["connection.js","page/AllPokemon.js","page/ModalCatch.js","page/Detail.js","page/MyPokemon.js","index.js"],"names":["client","ApolloClient","uri","cache","InMemoryCache","GET_POKEMONS","gql","_templateObject","Object","taggedTemplateLiteral","gqlVariables2","limit","offset","AllPokemon","navigate","useNavigate","_useQuery","useQuery","variables","loading","error","data","react_default","a","createElement","className","role","concat","message","Fragment","total","i","localStorage","length","JSON","parse","getItem","key","nick","split","countMyPokemon","pokemons","results","map","_ref","index","image","name","id","onClick","style","borderRadius","src","alt","title","ModalCatch","props","_useState","useState","_useState2","slicedToArray","show","setShow","handleClose","_useState3","_useState4","setTitle","_useState5","_useState6","info","setInfo","_useState7","_useState8","isSuccess","setIsSuccess","newNamePokemon","type","event","Math","random","width","height","Modal","onHide","dialogClassName","Header","closeButton","Title","Body","onChange","target","value","trim","replace","required","Footer","Button","variant","valueBefore","detail_poke","isExistsName","arrValueBefore","caughtPokemon","img","sprites","front_default","setItem","stringify","GET_POKEMON","Detail_templateObject","Detail","useParams","data-bs-ride","data-bs-target","data-bs-slide-to","aria-current","aria-label","data-bs-interval","pokemon","front_shiny","back_shiny","back_default","data-bs-slide","aria-hidden","toUpperCase","parseFloat","weight","base_experience","stats","dt","stat","base_stat","aria-valuenow","aria-valuemin","aria-valuemax","abilities","ability","types","moves","move","page_ModalCatch","MyPokemon","usernamePoke","setUsernamePoke","nickToDel","setNickToDel","xmlns","fill","viewBox","d","content","nomor","_loop","nickpokemon","username_poke","_loop2","j","push","e","stopPropagation","right","position","zIndex","getMyPokemons","allNickname","updatePokemon","includes","removeItem","App","react_router_dom","exact","to","react_router","path","element","page_AllPokemon","page_MyPokemon","page_Detail","ReactDOM","render","ApolloProvider","conn","document","getElementById"],"mappings":"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","file":"static/js/main.18e7f2e8.chunk.js","sourcesContent":["import {\r\n    ApolloClient,\r\n    InMemoryCache\r\n} from \"@apollo/client\";\r\n\r\nexport const client = new ApolloClient({\r\n    // uri: 'https://48p1r2roz4.sse.codesandbox.io',\r\n    uri: 'https://graphql-pokeapi.vercel.app/api/graphql',\r\n    cache: new InMemoryCache()\r\n});\r\n","import React from 'react';\nimport {\n  useQuery,\n  gql\n} from \"@apollo/client\";\nimport { useNavigate } from \"react-router-dom\";\nimport '../index.css';\n\nconst GET_POKEMONS = gql`\n  query pokemons($limit: Int, $offset: Int) {\n    pokemons(limit: $limit, offset: $offset) {\n      count\n      next\n      previous\n      status\n      message\n      results {\n        id\n        url\n        name\n        image\n      }\n    }\n  }\n`;\n\nconst gqlVariables2 = {\n  limit: 1118,\n  offset: 0,\n};\n\nfunction countMyPokemon(){\n  let total = 0;\n  for (let i = 0; i < localStorage.length; i++) {\n    total += JSON.parse(localStorage.getItem(localStorage.key(i))).nick.split(\"|\").length;\n  }\n  return total;\n}\n\nfunction AllPokemon() { \n  let navigate = useNavigate();\n  const { loading, error, data } = useQuery(GET_POKEMONS, {\n    variables: gqlVariables2,\n  });\n  \n  if (loading) return <div className=\"position-absolute top-50 start-50 spinner-border text-dark\" role=\"status\"><span className=\"visually-hidden\">Loading...</span></div>;\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <>\n      <div className=\"row justify-content-md-center\">\n        <div className=\"row col col-lg-10\">\n          <h2>List of All Pokemon.</h2>\n          <h4 className=\"text-decoration-none font-weight-normal\">My Pokemon Total: {countMyPokemon()} pokemons (in {localStorage.length} species)</h4>\n          {data.pokemons.results.map(({ image, name, id }, index) => (\n            <div key={image} className='cardpoke col col-md-2 col-sm-6 col-xs-12'>\n              <div className={index%2 === 0 ? \"card card-odd\" : \"card card-even\"} onClick={() => {navigate(\"/detail/\"+ name)}} style={{\"borderRadius\": \"10%\"}}>\n                <img src={image} className=\"view overlay zoom card-img-top\" alt={name} title={name}/>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title text-center\">{++index}. {name}</h5>\n                  <p className=\"card-text text-center\">Owned Total: {(JSON.parse(localStorage.getItem(name)) == null? '0' :  <strong>{(JSON.parse(localStorage.getItem(name)).nick.split(\"|\").length)}</strong>)}</p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AllPokemon;","import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nfunction ModalCatch(props) {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const [title , setTitle] = useState(\"\");\r\n  const [info , setInfo] = useState(\"\");\r\n  const [isSuccess , setIsSuccess] = useState(false);\r\n\r\n  var newNamePokemon = \"\";\r\n  const handleChange = event => {\r\n    newNamePokemon = event.target.value.trim().replace(/\\|/g, \"\");\r\n  }\r\n\r\n  const handleSave = event => {\r\n    var valueBefore = (localStorage.getItem(props.detail_poke.name) == null ? \"\" : JSON.parse(localStorage.getItem(props.detail_poke.name)).nick);\r\n    var isExistsName = false;\r\n    if(valueBefore !== \"\"){\r\n      var arrValueBefore = valueBefore.split('|');\r\n      for(let i = 0; i < arrValueBefore.length; i++){\r\n        if(arrValueBefore[i] === newNamePokemon){\r\n          isExistsName = true;\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(newNamePokemon === \"\"){\r\n      setTitle(\"Information\");\r\n      setInfo(\"Save failed. Nickname cannot be empty!\");\r\n      setIsSuccess(false);\r\n    } else if (isExistsName) {\r\n      setTitle(\"Information\");\r\n      setInfo(\"Save failed. Nickname already exists for this pokemon\");\r\n      setIsSuccess(false);\r\n    } else {\r\n      var caughtPokemon = { \r\n        \"img\": props.detail_poke.sprites.front_default, \r\n        \"nick\": (valueBefore + (valueBefore === \"\" ? '' : '|') + newNamePokemon) \r\n      };\r\n      localStorage.setItem(props.detail_poke.name, JSON.stringify(caughtPokemon));\r\n      setTitle(\"Information\");\r\n      setInfo(\"Save Successfully\");\r\n      setIsSuccess(false);\r\n    }\r\n  };  \r\n  \r\n  const handleCatch = event => {\r\n    let chance = Math.random()*100;\r\n    if ( chance <= 50 ){\r\n      setTitle(\"Information\");\r\n      setInfo(\"Unfortunately, You fail to catch the pokemon\");\r\n      setIsSuccess(false);\r\n    } else{\r\n      setTitle(\"Congrats... You got this pokemon\");\r\n      setInfo(\"Give it a name:\");\r\n      setIsSuccess(true);\r\n    }\r\n    handleShow();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button type=\"button\" className=\"btn rounded-pill btn-info col-md-2 col-centered btn-catch\" onClick={handleCatch}>\r\n        <img src=\"../pokemon.ico\" style={{\"width\": \"40px\", \"height\": \"40px\"}} alt=\"logo\"/>\r\n        <strong>Catch</strong>\r\n      </button>\r\n\r\n      <Modal show={show} onHide={handleClose} dialogClassName=\"modal-dialog-centered\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <label>{info}</label>\r\n          {(isSuccess ? <input type=\"text\" className=\"form-control\" onChange={handleChange} required/> : null)}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          {(isSuccess ? \r\n            <Button variant=\"primary\" onClick={handleSave}>\r\n              Save\r\n            </Button>\r\n           : null)}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ModalCatch;","import React from 'react';\nimport ModalCatch from './ModalCatch';\nimport '../index.css';\nimport { useQuery, gql } from \"@apollo/client\";\nimport { useParams } from \"react-router-dom\";\n\nconst GET_POKEMON = gql`\n  query pokemon($name: String!) {\n    pokemon(name: $name) {\n      id\n      name\n      base_experience\n      abilities {\n        ability {\n          name\n        }\n      }\n      sprites {\n        front_shiny\n        back_shiny\n        front_default\n        back_default\n      }\n      moves {\n        move {\n          name\n        }\n      }\n      types {\n        type {\n          name\n        }\n      }\n      stats {\n        base_stat\n        stat {\n          name\n        }\n      }\n      height\n      weight\n    }\n  }\n`;\n\nfunction Detail() { \n  const { loading, error, data } = useQuery(GET_POKEMON, {\n    variables: useParams(),\n  });\n\n  if (loading) return <div className=\"position-absolute top-50 start-50 spinner-border text-dark \" role=\"status\"><span className=\"visually-hidden\">Loading...</span></div>;\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <div className=\"container detail-page\">\n      <div className=\"row justify-content-md-center\">\n        <div className=\"col col-lg-8\">\n          <div id=\"carouselPokemon\" className=\"carousel carousel-dark slide col-md-4 offset-md-4\" data-bs-ride=\"carousel\">\n            <div className=\"carousel-indicators\">\n              <button type=\"button\" data-bs-target=\"#carouselPokemon\" data-bs-slide-to=\"0\" className=\"active\" aria-current=\"true\" aria-label=\"Slide 1\"></button>\n              <button type=\"button\" data-bs-target=\"#carouselPokemon\" data-bs-slide-to=\"1\" aria-label=\"Slide 2\"></button>\n              <button type=\"button\" data-bs-target=\"#carouselPokemon\" data-bs-slide-to=\"2\" aria-label=\"Slide 3\"></button>\n              <button type=\"button\" data-bs-target=\"#carouselPokemon\" data-bs-slide-to=\"3\" aria-label=\"Slide 4\"></button>\n            </div>\n            <div className=\"carousel-inner\">\n              <div className=\"carousel-item active\" data-bs-interval=\"2000\">\n                <img src={data.pokemon.sprites.front_shiny} className=\"d-block w-100 img-front\" alt=\"front_shiny\"/>\n                <div className=\"carousel-caption d-none d-md-block\">\n                  <p>front shiny of {data.pokemon.name}</p>\n                </div>\n              </div>\n              <div className=\"carousel-item\" data-bs-interval=\"2000\">\n                <img src={data.pokemon.sprites.back_shiny} className=\"d-block w-100 img-front\" alt=\"back_shiny\"/>\n                <div className=\"carousel-caption d-none d-md-block\">\n                  <p>back shiny of {data.pokemon.name}</p>\n                </div>\n              </div>\n              <div className=\"carousel-item\" data-bs-interval=\"2000\">\n                <img src={data.pokemon.sprites.front_default} className=\"d-block w-100 img-front\" alt=\"front_default\"/>\n                <div className=\"carousel-caption d-none d-md-block\">\n                  <p>front default of {data.pokemon.name}</p>\n                </div>\n              </div>\n              <div className=\"carousel-item\" data-bs-interval=\"2000\">\n                <img src={data.pokemon.sprites.back_default} className=\"d-block w-100 img-front\" alt=\"back_default\"/>\n                <div className=\"carousel-caption d-none d-md-block\">\n                  <p>back default of {data.pokemon.name}</p>\n                </div>\n              </div>\n            </div>\n            <button className=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselPokemon\" data-bs-slide=\"prev\">\n              <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n              <span className=\"visually-hidden\">Previous</span>\n            </button>\n            <button className=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselPokemon\" data-bs-slide=\"next\">\n              <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n              <span className=\"visually-hidden\">Next</span>\n            </button>\n          </div>\n\n          <h3 className=\"text-center\"><strong><u>{ data.pokemon.name.toUpperCase() }</u></strong></h3>\n          \n          <div className=\"row\">\n            <div className=\"col col-lg-4 col-md-12 col-sm-12\">\n              <div className=\"card border-dark mb-3\">\n                <div className=\"card-header\">Pokemon's Information</div>\n                <div className=\"card-body text-dark\">\n                  <h5>Height: <span className=\"fw-normal\">{ parseFloat(data.pokemon.height / 10) } Meter</span></h5>\n                  <h5>Weight: <span className=\"fw-normal\">{ parseFloat(data.pokemon.weight / 10) } Kilogram</span></h5>\n                  <h5 className=\"mb-4\">Experience: <span className=\"fw-normal\">{ data.pokemon.base_experience }</span></h5>\n\n                  <fieldset>\n                    <legend>Statistics:</legend>\n                  {/* <h5>Statistics</h5> */}\n                  {data.pokemon.stats.map(dt => ( \n                    <div key={dt.stat.name} className=\"mb-3\">\n                      <h5 className=\"fw-light\">{dt.stat.name}</h5>\n                      <div className=\"progress-bar\" style={{\"width\" : dt.base_stat + \"%\", \"height\": \"15px\"}} role=\"progressbar\" aria-valuenow={dt.base_stat} aria-valuemin=\"0\" aria-valuemax=\"10\">{dt.base_stat}</div>\n                    </div>\n                  ))}\n                  </fieldset>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col col-lg-4 col-md-12 col-sm-12\">\n              <div className=\"card border-dark mb-3\">\n                <div className=\"card-header\">Skills</div>\n                <div className=\"card-body text-dark\">\n                  <h5>Abilities:</h5>\n                  {data.pokemon.abilities.map(dt => (\n                    <span key={dt.ability.name} className=\"badge rounded-pill bg-success text-white\">{dt.ability.name}</span>\n                  ))}\n\n                  <h5>Types:</h5>\n                  {data.pokemon.types.map(dt => (\n                    <span key={dt.type.name} className=\"badge rounded-pill bg-warning text-white\">{dt.type.name}</span>\n                  ))}\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"col col-lg-4 col-md-12 col-sm-12\">\n              <div className=\"card border-dark mb-3\">\n                <div className=\"card-header\">Moves</div>\n                <div className=\"card-body text-dark\">\n                  {data.pokemon.moves.map(dt => (\n                    <span key={dt.move.name} className=\"badge rounded-pill bg-primary text-white\">{dt.move.name}</span>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <ModalCatch detail_poke={data.pokemon}/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Detail;\n","import React, { useState } from 'react';\nimport '../index.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nfunction MyPokemon() { \n  let navigate = useNavigate();\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [usernamePoke, setUsernamePoke] = useState();\n  const [nickToDel, setNickToDel] = useState();\n\n  const handleSave = () => {\n    var detail_poke = JSON.parse(localStorage.getItem(usernamePoke));\n    var img = detail_poke.img;\n    var allNickname = detail_poke.nick;\n    var updatePokemon = null;\n\n    if (allNickname.includes(\"|\" + nickToDel)) { //nick in last or middle\n      updatePokemon = { \n        \"img\": img,\n        \"nick\": allNickname.replace(\"|\" + nickToDel, '')\n      };\n      localStorage.setItem(usernamePoke, JSON.stringify(updatePokemon));\n    } else if(allNickname.includes(nickToDel + \"|\")) { //nick in first or middle\n      updatePokemon = { \n        \"img\": img,\n        \"nick\": allNickname.replace(nickToDel + \"|\", '')\n      };\n      localStorage.setItem(usernamePoke, JSON.stringify(updatePokemon));\n    } else {\n      localStorage.removeItem(usernamePoke); //nick alone\n    }\n    handleClose();\n  };\n  \n  const getMyPokemons = () => {\n    let content = [];\n    let nomor = 1;\n    for (let i = 0; i < localStorage.length; i++) {\n      const detail_poke = JSON.parse(localStorage.getItem(localStorage.key(i)));\n      const nickpokemon = detail_poke.nick.split('|');\n      const username_poke = localStorage.key(i);\n      \n      for (let j = 0; j < nickpokemon.length; j++) {\n        content.push(\n        <div key={username_poke + nickpokemon[j] + nomor} className=\"cardpoke col col-md-2 col-sm-6 col-xs-12 hide\">\n          <div className={nomor % 2 === 0 ? \"card card-odd\" : \"card card-even\"} onClick={() => {navigate(\"/detail/\"+ username_poke)}}  style={{\"borderRadius\": \"5%\"}}>\n            <button type=\"button\" className=\"btn-close float-right\" aria-label=\"Close\" title=\"Release your pokemon?\" onClick={(e) => {\n              e.stopPropagation();\n              setUsernamePoke(username_poke);\n              setNickToDel(nickpokemon[j]);\n              handleShow();\n            }} style={{\"right\": \"10px\",\"position\":\"absolute\", \"zIndex\":\"1\"}}></button>\n            <img src={detail_poke.img} className=\"view overlay zoom card-img-top\" alt={username_poke} title={username_poke}/>\n            <div className=\"card-body\">\n              <h5 className=\"card-title text-center\">{nomor++}. {username_poke}</h5>\n              <p className=\"card-text text-center\">nick: {nickpokemon[j]}</p>\n            </div>\n          </div>\n        </div>\n        )\n      }\n    }\n    return content;\n  };\n  return (\n    <>\n      <div className=\"row justify-content-md-center\">\n        <div className=\"row col col-lg-10\">\n          <h2 className=\"text-center\">My Pokemons</h2>\n          {localStorage.length === 0 ? \n          <div className=\"alert alert-primary d-flex align-items-center rounded-pill\" role=\"alert\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" className=\"bi bi-exclamation-triangle-fill flex-shrink-0 me-2\" viewBox=\"0 0 16 16\" role=\"img\" aria-label=\"Warning:\">\n              <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z\"/>\n            </svg>\n            <div>\n              You dont have any pokemons right now.\n            </div>\n          </div>\n          : getMyPokemons() }\n        </div>\n      </div>\n\n      <Modal show={show} onHide={handleClose} dialogClassName=\"modal-dialog-centered\">\n        <Modal.Header closeButton>\n          <Modal.Title>Confirmation</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <label>Are you sure to release the pokemon ({nickToDel})?</label>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Cancel\n          </Button>\n            <Button variant=\"primary\" onClick={handleSave}>\n              Release\n            </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default MyPokemon;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as conn from './connection.js'; \nimport { ApolloProvider } from \"@apollo/client\";\nimport { Route, NavLink, Routes, HashRouter } from \"react-router-dom\";\nimport AllPokemon from './page/AllPokemon';\nimport Detail from './page/Detail';\nimport MyPokemon from './page/MyPokemon';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <div className=\"container-fluid\">\n          <NavLink exact=\"true\" to=\"/\" className=\"navbar-brand\">Wild Nature</NavLink>\n          <NavLink className=\"navbar-brand\" to=\"/my-pokemon\">My Pokemon</NavLink>\n        </div>\n      </nav>\n      \n      <Routes>\n        <Route path=\"/\" element={ <AllPokemon/> }/>\n        <Route path=\"/my-pokemon\" element={ <MyPokemon/> }/>\n        <Route path=\"/detail/:name\" element={ <Detail/> }/>\n      </Routes>\n    </HashRouter>\n  );\n}\n\nReactDOM.render(\n  <ApolloProvider client={conn.client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}